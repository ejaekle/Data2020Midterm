pbinom(8,25,.4)
pbimon(17,25.4)-pbinom(8,25,.4)
pbinom(17,25.4)-pbinom(8,25,.4)
> pbinom(17,25,.4)-pbinom(8,25,.4)
pbinom(17,25,.4)-pbinom(8,25,.4)
pbinom(17,25,.6)-pbinom(8,25,.6)
pbinom(17,25,.4)-pbinom(7,25,.4)
pbinom(17,25,.6)-pbinom(7,25,.6)
binom(17,25,.7)-pbinom(7,25,.7)
pbinom(17,25,.7)-pbinom(7,25,.7)
pbinom(17,25,.3)-pbinom(7,25,.3)
pnorm
pstandardnorm()
pnorm(.08,mean=0,sd=1)
load("/Users/emily/Desktop/R/CH09/exe09-11.RData")
View(`exe09-11`)
mean(`exe09-11`$weight)
mean(`exe09-11`$Weight)
pt(-1.759)
pnorm(0)
pnorm(-3.714285714)
pbinom(5,10,.9)
pbinom(6,10,.9)
pbinom(0,10,.9)
pbinom(0,10,.9)+1-pbinom(9,10,.9)
pbinom(1,10,.9)+1-pbinom(8,10,.9)
pbinom(2,10,.9)+1-pbinom(7,10,.9)
pbinom(8,10,.9)+1-pbinom(1,10,.9)
pbinom(3,10,.9)+1-pbinom(6,10,.9)
pbinom(4,10,.9)+1-pbinom(5,10,.9)
pbinom(5,10,.9)+1-pbinom(4,10,.9)
pnorm(3.714285714)
pbinom(5,10,.9)+1-pbinom(4,10,.9)
qf(.95,2,8)
qf(.95,2,21)
pf(1.7,3,16)
load("/Users/emily/Downloads/Chapter+11%2C+Exercise+42.RData")
View(`exe11-42`)
summary(aov.out)
plot(TukeyHSD(aov.out,which=subject))
plot(TukeyHSD(aov.out,which=stool))
plot(TukeyHSD(aov.out,which="stool"))
plot(TukeyHSD(aov.out,which="subject"))
plot(TukeyHSD(aov.out,which="stool"))
qt(.975,13)
qt(.975,9)
pt(-.226,9)
qt(.9995,12)
qt(.975,12)
pt(.6,1)
pt(.5,1)
pt(1,.5)
qt(.5,1)
pt(.5,2)
pt(.5,1)
pt(.025,1)
pt(.975,1)
qt(.975,1)
pt(.5,4)
pt(.5,1)
pt(.25,1)
pt(.5,1)
pt(.5,1)
qf(.999,16,186)
pt(10.62,7)
pt(10.62,7)
qt(.975,7)
load("/Users/emily/Desktop/R/CH12/exe12-53.RData")
View(`exe12-53`)
scatter.smooth(`exe12-53`$x,`exe12-53`$y)
plot(`exe12-53`$x,`exe12-53`$y)
plot(`exe12-53`)
scatter.smooth(`exe12-53`)
model<-lm(x~y,data=`exe12-53`)
yfit<-model$fitted.values
summary(model)
lm(x~y,data=`exe12-53`)
summary(lm(x~y,data=`exe12-53`))
pt(-.5,1)
pt(.5,1)
1-pt(.5,1)
qt(.975,13)
load("/Users/emily/Desktop/R/CH12/exe12-17.RData")
View(`exe12-17`)
model<-lm(y~x,data=`exe12-17`)
newdata=data.frame(x=40)
predict(model,newdata,interval = "confidence")
qchisq(.95,4)
qchisq(.99,3)
qchisq(.90,3)
qchisq(.99,5)
qchisq(.95,3)
pchisq(1.57,3)
qchisq(.99,3)
pchisq(4.0345,3)
qexp(.2,1)
qexp(.4,1)
qexp(.6,1)
qexp(.8,1)
2*(1-pnorm(2.27))
qchisq(.9,7)
1-pchisq(4.8,7)
qchisq(.99,3)
1-pchisq(83.225,3)
load("/Users/emily/Desktop/R/Ch13/exe13-40.RData")
View(`exe13-40`)
load("/Users/emily/Desktop/R/CH14/exe14-04.RData")
View(`exe14-04`)
wilcox.test(`exe14-04`$Time,mu=30,alternative = c("less"))
wilcox.test(`exe14-04`$Time,mu=30,alternative = c("greater"))
wilcox.test(`exe14-04`$Time,mu=30)
chisq.test(`exe13-40`[2:4])
qchisq(.9,4)
qchisq(.9,5)
library(tidyverse)
#library(tidyverse)
library(MASS)
library(ISLR)
library(ggfortify)
# View data and summary information
install.packages("tidyverse")
library(tidyverse)
library(MASS)
library(ISLR)
# View data and summary information
library(tidyverse)
library(MASS)
install.packages(ISLR)
library(ISLR)
install.packages(ISLR)
library(ISLR)
# View data and summary information
# fix(Boston)
names(Boston)
?Boston
summary(Boston)
college = read.csv("College.csv")
y <- rbern(100, 0.5)
X <- matrix(rbern(100*10000,0.5), 100, 1000)
# part A
library(simcausal)
y <- rbern(100, 0.5)
X <- matrix(rbern(100*10000,0.5), 100, 1000)
r.squared.values <- vector(length=100)
for (i in 1:100){
linearmodel <- lm(y~X[,i])
r.squared.values[i] <- summary(linearmodel)$r.squared
}
i.star <- which.max(r.squared.values)
i.star
xy.dataframe <- data.frame(y = y, x= X[,i.star])
k = 5
folds = cut(seq(1, nrow(xy.dataframe)), breaks = k, labels=FALSE)
folds = folds[sample(length(folds))]
cv.errors = matrix(NA,k,1)
for (j in 1:k){
lm.fit.1 = lm(y~x, data = xy.dataframe[folds!=j,])
pred.1 = predict(lm.fit.1, xy.dataframe[folds==j,])
cv.errors[j,1] = mean((xy.dataframe$y[folds==j]-pred.1)^2)
}
mean(cv.errors)
for (i in 1:10000){
linearmodel <- lm(y~X[,i])
r.squared.values[i] <- summary(linearmodel)$r.squared
}
linearmodel <- lm(y~X[i,])
r.squared.values <- vector(length=10000)
for (i in 1:10000){
linearmodel <- lm(y~X[i,])
r.squared.values[i] <- summary(linearmodel)$r.squared
}
i.star <- which.max(r.squared.values)
i.star
y <- rbern(100, 0.5)
X <- matrix(rbern(100*10000,0.5), 100, 10000)
r.squared.values <- vector(length=10000)
for (i in 1:10000){
linearmodel <- lm(y~X[,i])
r.squared.values[i] <- summary(linearmodel)$r.squared
}
i.star <- which.max(r.squared.values)
i.star
xy.dataframe <- data.frame(y = y, x= X[,i.star])
k = 5
folds = cut(seq(1, nrow(xy.dataframe)), breaks = k, labels=FALSE)
folds = folds[sample(length(folds))]
cv.errors = matrix(NA,k,1)
for (j in 1:k){
lm.fit.1 = lm(y~x, data = xy.dataframe[folds!=j,])
pred.1 = predict(lm.fit.1, xy.dataframe[folds==j,])
cv.errors[j,1] = mean((xy.dataframe$y[folds==j]-pred.1)^2)
}
mean(cv.errors)
names(nyc_census)
census <- read.csv('nyc_census.csv')
setwd("~/Desktop/data2020/Data2020Midterm")
census <- read.csv('nyc_census.csv')
census <- data.frame(census)
source('~/Desktop/data2020/Data2020Midterm/exploratory.R')
names(nyc_census)
hist(Country)
hist(nyc_census$Country)
hist(nyc_census$Income)
hist(Income)
hist(TotalPop)
hist(Income)
hist(nyc_census$Income)
hist(nyc_census$TotalPop)
hist(nyc_census$IncomePerCap)
View(nyc_census)
hist(nyc_census$County)
location1 <-nyc_census[(nyc_census$Borough=='Brooklyn'),]
View(location1)
View(nyc_census)
View(nyc_census)
brooklyn <- nyc_census[(nyc_census$Borough=='Brooklyn'),]
manhattan <- nyc_census[(nyc_census$Borough=='Manhattan'),]
queens <- nyc_census[(nyc_census$Borough=='Queens'),]
bronx <- nyc_census[(nyc_census$Borough=='Bronx'),]
staten.island <- nyc_census[(nyc_census$Borough=='Staten Island'),]
sum(brooklyn$TotalPop)
sum(manhattan$TotalPop)
sum(queens$TotalPop)
sum(bronx$TotalPop)
sum(staten.island$TotalPop)
(brooklyn$Hispanic)/100
percentages*brooklyn$TotalPop
percentages <- (brooklyn$Hispanic)/100
percentages*brooklyn$TotalPop
sum(percentages*brooklyn$TotalPop)
percentages <- (manhattan$Hispanic)/100
sum(percentages*manhattan$TotalPop)
percentages <- (queens$Hispanic)/100
sum(percentages*queens$TotalPop)
percentages <- (bronx$Hispanic)/100
sum(percentages*bronx$TotalPop)
percentages <- (staten.island$Hispanic)/100
sum(percentages*staten.island$TotalPop)
census <- read.csv('nyc_census.csv')
census <- data.frame(census)
names(census)
dim(census)
sum(is.na(census))
colSums(is.na(census))
census2 <- na.omit(census)
dim(census2) # 2095 versus the previous 2167 (not that much data loss)
# perhaps drop the columns where total population is 0 (since the rest of the values
# for these are NA)
dim(census)
census3 <-census[!(census$TotalPop==0),]
dim(census3)
sum(is.na(census3)) #177 vs. 1269
colSums(is.na(census3))
# dont really want to replace with average values, we can just do na.omit and we lose less
# than 100 values
census4 <- na.omit(census3)
dim(census4)
nyc_census <- census4
2167 - 2095
72 #rows deleted out of 2167
72/2167 #around 3% of the data is lost (although a lot of that had population =0)
# so realistically we lost less than 3%
summary(nyc_census)
brooklyn <- nyc_census[(nyc_census$Borough=='Brooklyn'),]
manhattan <- nyc_census[(nyc_census$Borough=='Manhattan'),]
queens <- nyc_census[(nyc_census$Borough=='Queens'),]
bronx <- nyc_census[(nyc_census$Borough=='Bronx'),]
staten.island <- nyc_census[(nyc_census$Borough=='Staten Island'),]
sum(brooklyn$TotalPop)
sum(manhattan$TotalPop)
sum(queens$TotalPop)
sum(bronx$TotalPop)
sum(staten.island$TotalPop)
brook.percentages <- (brooklyn$Hispanic)/100
sum(percentages*brooklyn$TotalPop)
brook.percentages <- (brooklyn$Hispanic)/100
sum(brook.percentages*brooklyn$TotalPop)
total.cenus.pop <= sum(nyc_census$TotalPop)
total.cenus.pop <- sum(nyc_census$TotalPop)
total.cenus.pop
brook.percentages <- (brooklyn$Hispanic)/100
sum(brook.percentages*brooklyn$TotalPop)
brook.his <- sum(brook.percentages*brooklyn$TotalPop)
brook.his.total <- brook.his/total.cenus.pop
brook.his.total <- brook.his/brooklyn$TotalPop
brook.his.total <- brook.his/sum(brooklyn$TotalPop)
man.percentages <- (manhattan$Hispanic)/100
man.his <-sum(percentages*manhattan$TotalPop)
man.his.percent <- man.his/sum(manhattan$TotalPop)
man.percentages <- (manhattan$Hispanic)/100
man.his <-sum(man.percentages*manhattan$TotalPop)
man.his.percent <- man.his/sum(manhattan$TotalPop)
man.his.percent
qu.percentages <- (queens$Hispanic)/100
qu.his <- sum(qu.percentages*queens$TotalPop)
qu.his.percent <- qu.hist/sum(queens$TotalPop)
qu.percentages <- (queens$Hispanic)/100
qu.his <- sum(qu.percentages*queens$TotalPop)
qu.his.percent <- qu.his/sum(queens$TotalPop)
bronx.percentages <- (bronx$Hispanic)/100
bronx.his <- sum(bronx.percentages*bronx$TotalPop)
bronx.his.percent <-bronx.his/sum(bronx$TotalPop)
si.percentages <- (staten.island$Hispanic)/100
si.his <- sum(si.percentages*staten.island$TotalPop)
si.his.percent <- si.his/sum(staten.island$TotalPop)
brook.wpercentages <- (brooklyn$White)/100
brook.wh <- sum(brook.wpercentages*brooklyn$TotalPop)
brook.wh.percent <- brook.wh/sum(brooklyn$TotalPop)
man.wpercentages <- (manhattan$White)/100
man.wh <-sum(man.wpercentages*manhattan$TotalPop)
man.wh.percent <- man.wh/sum(manhattan$TotalPop)
qu.wpercentages <- (queens$White)/100
qu.wh <- sum(qu.wpercentages*queens$TotalPop)
qu.wh.percent <- qu.wh/sum(queens$TotalPop)
bronx.wpercentages <- (bronx$White)/100
bronx.wh <- sum(bronx.wpercentages*bronx$TotalPop)
bronx.wh.percent <-bronx.wh/sum(bronx$TotalPop)
si.wpercentages <- (staten.island$White)/100
si.wh <- sum(si.wpercentages*staten.island$TotalPop)
si.wh.percent <- si.wh/sum(staten.island$TotalPop)
brook.bpercentages <- (brooklyn$Black)/100
brook.b <- sum(brook.bpercentages*brooklyn$TotalPop)
brook.b.percent <- brook.b/sum(brooklyn$TotalPop)
man.bpercentages <- (manhattan$Black)/100
man.b <-sum(man.bpercentages*manhattan$TotalPop)
man.b.percent <- man.b/sum(manhattan$TotalPop)
man.bpercentages <- (manhattan$Black)/100
man.b <-sum(man.bpercentages*manhattan$TotalPop)
man.b.percent <- man.b/sum(manhattan$TotalPop)
qu.bpercentages <- (queens$Black)/100
qu.b <- sum(qu.bpercentages*queens$TotalPop)
qu.b.percent <- qu.b/sum(queens$TotalPop)
bronx.bpercentages <- (bronx$Black)/100
bronx.b <- sum(bronx.bpercentages*bronx$TotalPop)
bronx.b.percent <-bronx.b/sum(bronx$TotalPop)
si.bpercentages <- (staten.island$Black)/100
si.b <- sum(si.bpercentages*staten.island$TotalPop)
si.b.percent <- si.b/sum(staten.island$TotalPop)
brook.npercentages <- (brooklyn$Native)/100
brook.n <- sum(brook.npercentages*brooklyn$TotalPop)
brook.n.percent <- brook.n/sum(brooklyn$TotalPop)
man.npercentages <- (manhattan$Native)/100
man.n <-sum(man.npercentages*manhattan$TotalPop)
man.n.percent <- man.n/sum(manhattan$TotalPop)
qu.npercentages <- (queens$Native)/100
qu.n <- sum(qu.npercentages*queens$TotalPop)
qu.n.percent <- qu.n/sum(queens$TotalPop)
bronx.npercentages <- (bronx$Native)/100
bronx.n <- sum(bronx.npercentages*bronx$TotalPop)
bronx.n.percent <-bronx.n/sum(bronx$TotalPop)
brook.apercentages <- (brooklyn$Asian)/100
brook.b <- sum(brook.bpercentages*brooklyn$TotalPop)
brook.b.percent <- brook.b/sum(brooklyn$TotalPop)
man.apercentages <- (manhattan$Asian)/100
man.a <-sum(man.apercentages*manhattan$TotalPop)
man.a.percent <- man.a/sum(manhattan$TotalPop)
qu.apercentages <- (queens$Asian)/100
qu.a <- sum(qu.apercentages*queens$TotalPop)
qu.a.percent <- qu.a/sum(queens$TotalPop)
bronx.apercentages <- (bronx$Asian)/100
bronx.a <- sum(bronx.apercentages*bronx$TotalPop)
bronx.a.percent <-bronx.a/sum(bronx$TotalPop)
si.npercentages <- (staten.island$Native)/100
si.n <- sum(si.npercentages*staten.island$TotalPop)
si.n.percent <- si.n/sum(staten.island$TotalPop)
bronx.apercentages <- (bronx$Asian)/100
bronx.a <- sum(bronx.apercentages*bronx$TotalPop)
bronx.a.percent <-bronx.a/sum(bronx$TotalPop)
si.apercentages <- (staten.island$Asian)/100
si.a <- sum(si.apercentages*staten.island$TotalPop)
si.a.percent <- si.a/sum(staten.island$TotalPop)
brook.apercentages <- (brooklyn$Asian)/100
brook.b <- sum(brook.apercentages*brooklyn$TotalPop)
brook.a.percent <- brook.a/sum(brooklyn$TotalPop)
brook.apercentages <- (brooklyn$Asian)/100
brook.b <- sum(brook.apercentages*brooklyn$TotalPop)
brook.a.percent <- brook.a/sum(brooklyn$TotalPop)
man.apercentages <- (manhattan$Asian)/100
man.a <-sum(man.apercentages*manhattan$TotalPop)
man.a.percent <- man.a/sum(manhattan$TotalPop)
qu.apercentages <- (queens$Asian)/100
qu.a <- sum(qu.apercentages*queens$TotalPop)
qu.a.percent <- qu.a/sum(queens$TotalPop)
bronx.apercentages <- (bronx$Asian)/100
bronx.a <- sum(bronx.apercentages*bronx$TotalPop)
bronx.a.percent <-bronx.a/sum(bronx$TotalPop)
si.apercentages <- (staten.island$Asian)/100
si.a <- sum(si.apercentages*staten.island$TotalPop)
si.a.percent <- si.a/sum(staten.island$TotalPop)
names.b <- c('Brooklyn', 'Bronx', 'Manhattan', 'Queens', 'Staten Island')
hisp <- c(brook.his.percent, bronx.his.percent, man.his.percent, qu.his.percent, si.his.percent)
bla <- c(brook.b.percent, bronx.b.percent, man.b.percent, qu.b.percent, si.b.percent)
wh <- c(brook.wh.percent, bronx.wh.percent, man.wh.percent, qu.wh.percent, si.wh.percent)
nat <- c(brook.n.percent, bronx.n.percent, man.n.percent, qu.n.percent, si.n.percent)
as <- c(brook.a.percent, bronx.a.percent, man.a.percent, qu.a.percent, si.a.percent)
data <- data.frame(names.b, hisp, bla, wh, nat, as)
hisp <- c(brook.his.percent, bronx.his.percent, man.his.percent, qu.his.percent, si.his.percent)
brook.his.percent <- brook.his/sum(brooklyn$TotalPop)
#total hispanics in brooklyn approx
brook.percentages <- (brooklyn$Hispanic)/100
brook.his <- sum(brook.percentages*brooklyn$TotalPop)
brook.his.percent <- brook.his/sum(brooklyn$TotalPop)
man.percentages <- (manhattan$Hispanic)/100
man.his <-sum(man.percentages*manhattan$TotalPop)
man.his.percent <- man.his/sum(manhattan$TotalPop)
qu.percentages <- (queens$Hispanic)/100
qu.his <- sum(qu.percentages*queens$TotalPop)
qu.his.percent <- qu.his/sum(queens$TotalPop)
bronx.percentages <- (bronx$Hispanic)/100
bronx.his <- sum(bronx.percentages*bronx$TotalPop)
bronx.his.percent <-bronx.his/sum(bronx$TotalPop)
si.percentages <- (staten.island$Hispanic)/100
si.his <- sum(si.percentages*staten.island$TotalPop)
si.his.percent <- si.his/sum(staten.island$TotalPop)
#White
brook.wpercentages <- (brooklyn$White)/100
brook.wh <- sum(brook.wpercentages*brooklyn$TotalPop)
brook.wh.percent <- brook.wh/sum(brooklyn$TotalPop)
man.wpercentages <- (manhattan$White)/100
man.wh <-sum(man.wpercentages*manhattan$TotalPop)
man.wh.percent <- man.wh/sum(manhattan$TotalPop)
qu.wpercentages <- (queens$White)/100
qu.wh <- sum(qu.wpercentages*queens$TotalPop)
qu.wh.percent <- qu.wh/sum(queens$TotalPop)
bronx.wpercentages <- (bronx$White)/100
bronx.wh <- sum(bronx.wpercentages*bronx$TotalPop)
bronx.wh.percent <-bronx.wh/sum(bronx$TotalPop)
si.wpercentages <- (staten.island$White)/100
si.wh <- sum(si.wpercentages*staten.island$TotalPop)
si.wh.percent <- si.wh/sum(staten.island$TotalPop)
#black
brook.bpercentages <- (brooklyn$Black)/100
brook.b <- sum(brook.bpercentages*brooklyn$TotalPop)
brook.b.percent <- brook.b/sum(brooklyn$TotalPop)
man.bpercentages <- (manhattan$Black)/100
man.b <-sum(man.bpercentages*manhattan$TotalPop)
man.b.percent <- man.b/sum(manhattan$TotalPop)
qu.bpercentages <- (queens$Black)/100
qu.b <- sum(qu.bpercentages*queens$TotalPop)
qu.b.percent <- qu.b/sum(queens$TotalPop)
bronx.bpercentages <- (bronx$Black)/100
bronx.b <- sum(bronx.bpercentages*bronx$TotalPop)
bronx.b.percent <-bronx.b/sum(bronx$TotalPop)
si.bpercentages <- (staten.island$Black)/100
si.b <- sum(si.bpercentages*staten.island$TotalPop)
si.b.percent <- si.b/sum(staten.island$TotalPop)
#native
brook.npercentages <- (brooklyn$Native)/100
brook.n <- sum(brook.npercentages*brooklyn$TotalPop)
brook.n.percent <- brook.n/sum(brooklyn$TotalPop)
man.npercentages <- (manhattan$Native)/100
man.n <-sum(man.npercentages*manhattan$TotalPop)
man.n.percent <- man.n/sum(manhattan$TotalPop)
qu.npercentages <- (queens$Native)/100
qu.n <- sum(qu.npercentages*queens$TotalPop)
qu.n.percent <- qu.n/sum(queens$TotalPop)
bronx.npercentages <- (bronx$Native)/100
bronx.n <- sum(bronx.npercentages*bronx$TotalPop)
bronx.n.percent <-bronx.n/sum(bronx$TotalPop)
si.npercentages <- (staten.island$Native)/100
si.n <- sum(si.npercentages*staten.island$TotalPop)
si.n.percent <- si.n/sum(staten.island$TotalPop)
#asian
brook.apercentages <- (brooklyn$Asian)/100
brook.b <- sum(brook.apercentages*brooklyn$TotalPop)
brook.a.percent <- brook.a/sum(brooklyn$TotalPop)
man.apercentages <- (manhattan$Asian)/100
man.a <-sum(man.apercentages*manhattan$TotalPop)
man.a.percent <- man.a/sum(manhattan$TotalPop)
qu.apercentages <- (queens$Asian)/100
qu.a <- sum(qu.apercentages*queens$TotalPop)
qu.a.percent <- qu.a/sum(queens$TotalPop)
bronx.apercentages <- (bronx$Asian)/100
bronx.a <- sum(bronx.apercentages*bronx$TotalPop)
bronx.a.percent <-bronx.a/sum(bronx$TotalPop)
si.apercentages <- (staten.island$Asian)/100
si.a <- sum(si.apercentages*staten.island$TotalPop)
si.a.percent <- si.a/sum(staten.island$TotalPop)
names.b <- c('Brooklyn', 'Bronx', 'Manhattan', 'Queens', 'Staten Island')
hisp <- c(brook.his.percent, bronx.his.percent, man.his.percent, qu.his.percent, si.his.percent)
bla <- c(brook.b.percent, bronx.b.percent, man.b.percent, qu.b.percent, si.b.percent)
wh <- c(brook.wh.percent, bronx.wh.percent, man.wh.percent, qu.wh.percent, si.wh.percent)
nat <- c(brook.n.percent, bronx.n.percent, man.n.percent, qu.n.percent, si.n.percent)
as <- c(brook.a.percent, bronx.a.percent, man.a.percent, qu.a.percent, si.a.percent)
data <- data.frame(names.b, hisp, bla, wh, nat, as)
brook.a.percent <- brook.a/sum(brooklyn$TotalPop)
brook.apercentages <- (brooklyn$Asian)/100
brook.a <- sum(brook.apercentages*brooklyn$TotalPop)
brook.a.percent <- brook.a/sum(brooklyn$TotalPop)
names.b <- c('Brooklyn', 'Bronx', 'Manhattan', 'Queens', 'Staten Island')
hisp <- c(brook.his.percent, bronx.his.percent, man.his.percent, qu.his.percent, si.his.percent)
bla <- c(brook.b.percent, bronx.b.percent, man.b.percent, qu.b.percent, si.b.percent)
wh <- c(brook.wh.percent, bronx.wh.percent, man.wh.percent, qu.wh.percent, si.wh.percent)
nat <- c(brook.n.percent, bronx.n.percent, man.n.percent, qu.n.percent, si.n.percent)
as <- c(brook.a.percent, bronx.a.percent, man.a.percent, qu.a.percent, si.a.percent)
data <- data.frame(names.b, hisp, bla, wh, nat, as)
View(data)
library(ggplot2)
data.m <- melt(data, id.vars='Names')
data.m <- melt(data, id.vars='Names')
??melt
library(ggplot2)
data.m <- melt(data, id.vars='Names')
??melt
library(ggplot2)
library(reshape)
data.m <- melt(data, id.vars='Names')
data.m <- melt(data, id.vars='names.b')
ggplot(data.m, aes(Names, value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity")
ggplot(data.m, aes(names.b, value)) +
geom_bar(aes(fill = variable), position = "dodge", stat="identity")
